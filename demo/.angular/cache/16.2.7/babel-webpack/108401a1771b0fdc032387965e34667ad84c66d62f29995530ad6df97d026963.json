{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction HomeComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \" Ha sido redirigido a esta p\\u00E1gina porque no tiene la informaci\\u00F3n necesaria derechos para la acci\\u00F3n requerida. \\u00A1Inicie sesi\\u00F3n con una cuenta de usuario respectiva! \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class HomeComponent {\n  constructor() {\n    this.userName = ''; // Debes establecer el nombre de usuario\n    this.needsLogin = false;\n    this.isUserLoggedIn = false;\n  }\n  ngOnInit() {\n    // La lógica para verificar el estado de inicio de sesión va aquí\n    // Puedes usar this.isUserLoggedIn para reflejar el estado actual\n  }\n  login() {\n    // Aquí debes implementar la lógica de inicio de sesión.\n    // Por ejemplo, verificar las credenciales y establecer isUserLoggedIn en true si el inicio de sesión es exitoso.\n    this.isUserLoggedIn = true;\n  }\n  logout() {\n    // Aquí debes implementar la lógica de cierre de sesión.\n    // Por ejemplo, establecer isUserLoggedIn en false y borrar el nombre de usuario.\n    this.isUserLoggedIn = false;\n    this.userName = 'incorrepto';\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 10,\n    vars: 2,\n    consts: [[1, \"card\"], [1, \"header\"], [1, \"title\"], [1, \"content\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [1, \"btn\", \"btn-default\", 3, \"click\"], [1, \"alert\", \"alert-warning\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵtemplate(5, HomeComponent_div_5_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementStart(6, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_6_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(7, \"Iniciar Sesi\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_8_listener() {\n          return ctx.logout();\n        });\n        i0.ɵɵtext(9, \"Cerrar Sesi\\u00F3n\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Bienvenido \", ctx.userName, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.needsLogin);\n      }\n    },\n    dependencies: [i1.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","HomeComponent","constructor","userName","needsLogin","isUserLoggedIn","ngOnInit","login","logout","_","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵtemplate","HomeComponent_div_5_Template","ɵɵlistener","HomeComponent_Template_button_click_6_listener","HomeComponent_Template_button_click_8_listener","ɵɵadvance","ɵɵtextInterpolate1","ɵɵproperty"],"sources":["C:\\Users\\HP CORE i5\\Desktop\\Proyecto final\\angular-crud\\demo\\src\\app\\home\\home.component.ts","C:\\Users\\HP CORE i5\\Desktop\\Proyecto final\\angular-crud\\demo\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  userName: string = ''; // Debes establecer el nombre de usuario\r\n  needsLogin: boolean = false;\r\n  isUserLoggedIn: boolean = false;\r\n\r\n  ngOnInit() {\r\n    // La lógica para verificar el estado de inicio de sesión va aquí\r\n    // Puedes usar this.isUserLoggedIn para reflejar el estado actual\r\n  }\r\n\r\n  login(): void {\r\n    // Aquí debes implementar la lógica de inicio de sesión.\r\n    // Por ejemplo, verificar las credenciales y establecer isUserLoggedIn en true si el inicio de sesión es exitoso.\r\n    this.isUserLoggedIn = true;\r\n  }\r\n\r\n  logout(): void {\r\n    // Aquí debes implementar la lógica de cierre de sesión.\r\n    // Por ejemplo, establecer isUserLoggedIn en false y borrar el nombre de usuario.\r\n    this.isUserLoggedIn = false;\r\n    this.userName = 'incorrepto';\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"header\">\r\n    <h1 class=\"title\">Bienvenido {{userName}}</h1>\r\n  </div>\r\n  <div class=\"content\">\r\n\r\n    <div *ngIf=\"needsLogin\" class=\"alert alert-warning\">\r\n      Ha sido redirigido a esta página porque no tiene la información necesaria\r\n      derechos para la acción requerida. ¡Inicie sesión con una cuenta de usuario respectiva!\r\n    </div>\r\n\r\n    <button (click)=\"login()\" class=\"btn btn-default\">Iniciar Sesión</button>\r\n    <button (click)=\"logout()\" class=\"btn btn-default\">Cerrar Sesión</button>\r\n\r\n  </div>\r\n</div>\r\n\r\n  <!--- <tabbed-pane [activeId]=\"0\">\r\n        <table title=\"Booked\" [id]=\"0\">\r\n          Esta página podría mostrar todos los pasajeros reservados ...\r\n        </table>\r\n        <table title=\"Checked in\" [id]=\"1\">\r\n          Esta página podría mostrar todos los pasajeros facturados ...\r\n        </table>\r\n\r\n        <table title=\"Boarded\" [id]=\"2\">\r\n          Esta página podría mostrar todos los pasajeros embarcados ...\r\n        </table>\r\n      </tabbed-pane> -->\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;;;ICMIA,EAAA,CAAAC,cAAA,aAAoD;IAClDD,EAAA,CAAAE,MAAA,mMAEF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;ADFV,OAAM,MAAOC,aAAa;EAL1BC,YAAA;IAME,KAAAC,QAAQ,GAAW,EAAE,CAAC,CAAC;IACvB,KAAAC,UAAU,GAAY,KAAK;IAC3B,KAAAC,cAAc,GAAY,KAAK;;EAE/BC,QAAQA,CAAA;IACN;IACA;EAAA;EAGFC,KAAKA,CAAA;IACH;IACA;IACA,IAAI,CAACF,cAAc,GAAG,IAAI;EAC5B;EAEAG,MAAMA,CAAA;IACJ;IACA;IACA,IAAI,CAACH,cAAc,GAAG,KAAK;IAC3B,IAAI,CAACF,QAAQ,GAAG,YAAY;EAC9B;EAAC,QAAAM,CAAA,G;qBArBUR,aAAa;EAAA;EAAA,QAAAS,EAAA,G;UAAbT,aAAa;IAAAU,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP1BpB,EAAA,CAAAC,cAAA,aAAkB;QAEID,EAAA,CAAAE,MAAA,GAAuB;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAEhDH,EAAA,CAAAC,cAAA,aAAqB;QAEnBD,EAAA,CAAAsB,UAAA,IAAAC,4BAAA,iBAGM;QAENvB,EAAA,CAAAC,cAAA,gBAAkD;QAA1CD,EAAA,CAAAwB,UAAA,mBAAAC,+CAAA;UAAA,OAASJ,GAAA,CAAAX,KAAA,EAAO;QAAA,EAAC;QAAyBV,EAAA,CAAAE,MAAA,0BAAc;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACzEH,EAAA,CAAAC,cAAA,gBAAmD;QAA3CD,EAAA,CAAAwB,UAAA,mBAAAE,+CAAA;UAAA,OAASL,GAAA,CAAAV,MAAA,EAAQ;QAAA,EAAC;QAAyBX,EAAA,CAAAE,MAAA,yBAAa;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAVvDH,EAAA,CAAA2B,SAAA,GAAuB;QAAvB3B,EAAA,CAAA4B,kBAAA,gBAAAP,GAAA,CAAAf,QAAA,KAAuB;QAInCN,EAAA,CAAA2B,SAAA,GAAgB;QAAhB3B,EAAA,CAAA6B,UAAA,SAAAR,GAAA,CAAAd,UAAA,CAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}